commit 02bd00e080bd497d68b39a3d297d75d4ecb2d733
Author: Davy Durham <ddurham@users.sourceforge.net>
Date:   Mon Nov 12 16:02:24 2018 -0600

    initial, obvious fixes for python 3.7.  Unsure of some other of the new PyThreadState members.

diff --git a/src/fibers.c b/src/fibers.c
index 27ee89d..4a0c91e 100644
--- a/src/fibers.c
+++ b/src/fibers.c
@@ -222,14 +222,28 @@ stacklet__callback(stacklet_handle h, void *arg)
     tstate = PyThreadState_Get();
     ASSERT(tstate != NULL);
     tstate->frame = NULL;
+#if PY_VERSION_HEX >= 0x03070000
+    tstate->exc_state.exc_type = NULL;
+    tstate->exc_state.exc_value = NULL;
+    tstate->exc_state.exc_traceback = NULL;
+    tstate->exc_state.previous_item = NULL;
+#else
     tstate->exc_type = NULL;
     tstate->exc_value = NULL;
     tstate->exc_traceback = NULL;
+#endif
     self->ts.recursion_depth = tstate->recursion_depth;
     self->ts.frame = NULL;
+#if PY_VERSION_HEX >= 0x03070000
+    self->ts.exc_state.exc_type = NULL;
+    self->ts.exc_state.exc_value = NULL;
+    self->ts.exc_state.exc_traceback = NULL;
+    self->ts.exc_state.previous_item = NULL;
+#else
     self->ts.exc_type = NULL;
     self->ts.exc_value = NULL;
     self->ts.exc_traceback = NULL;
+#endif
 
     if (value == NULL) {
         /* pending exception, user called throw on a non-started Fiber,
@@ -284,9 +298,16 @@ do_switch(Fiber *self, PyObject *value)
     ASSERT(tstate->dict != NULL);
     current->ts.recursion_depth = tstate->recursion_depth;
     current->ts.frame = tstate->frame;
+#if PY_VERSION_HEX >= 0x03070000
+    current->ts.exc_state.exc_type = tstate->exc_state.exc_type;
+    current->ts.exc_state.exc_value = tstate->exc_state.exc_value;
+    current->ts.exc_state.exc_traceback = tstate->exc_state.exc_traceback;
+    current->ts.exc_state.previous_item = tstate->exc_state.previous_item;
+#else
     current->ts.exc_type = tstate->exc_type;
     current->ts.exc_value = tstate->exc_value;
     current->ts.exc_traceback = tstate->exc_traceback;
+#endif
     ASSERT(current->stacklet_h == NULL);
 
     /* _global_state is to pass values across a switch. Its contents are only
@@ -326,13 +347,27 @@ do_switch(Fiber *self, PyObject *value)
     /* restore state */
     tstate->recursion_depth = current->ts.recursion_depth;
     tstate->frame = current->ts.frame;
+#if PY_VERSION_HEX >= 0x03070000
+    tstate->exc_state.exc_type = current->ts.exc_state.exc_type;
+    tstate->exc_state.exc_value = current->ts.exc_state.exc_value;
+    tstate->exc_state.exc_traceback = current->ts.exc_state.exc_traceback;
+    tstate->exc_state.previous_item = current->ts.exc_state.previous_item;
+#else
     tstate->exc_type = current->ts.exc_type;
     tstate->exc_value = current->ts.exc_value;
     tstate->exc_traceback = current->ts.exc_traceback;
+#endif
     current->ts.frame = NULL;
+#if PY_VERSION_HEX >= 0x03070000
+    current->ts.exc_state.exc_type = NULL;
+    current->ts.exc_state.exc_value = NULL;
+    current->ts.exc_state.exc_traceback = NULL;
+    current->ts.exc_state.previous_item = NULL;
+#else
     current->ts.exc_type = NULL;
     current->ts.exc_value = NULL;
     current->ts.exc_traceback = NULL;
+#endif
 
     return result;
 }
@@ -583,9 +618,16 @@ Fiber_tp_traverse(Fiber *self, visitproc visit, void *arg)
     Py_VISIT(self->ts_dict);
     Py_VISIT(self->parent);
     Py_VISIT(self->ts.frame);
+#if PY_VERSION_HEX >= 0x03070000
+    Py_VISIT(self->ts.exc_state.exc_type);
+    Py_VISIT(self->ts.exc_state.exc_value);
+    Py_VISIT(self->ts.exc_state.exc_traceback);
+    Py_VISIT(self->ts.exc_state.previous_item);
+#else
     Py_VISIT(self->ts.exc_type);
     Py_VISIT(self->ts.exc_value);
     Py_VISIT(self->ts.exc_traceback);
+#endif
     return 0;
 }
 
@@ -600,9 +642,16 @@ Fiber_tp_clear(Fiber *self)
     Py_CLEAR(self->ts_dict);
     Py_CLEAR(self->parent);
     Py_CLEAR(self->ts.frame);
+#if PY_VERSION_HEX >= 0x03070000
+    Py_CLEAR(self->ts.exc_state.exc_type);
+    Py_CLEAR(self->ts.exc_state.exc_value);
+    Py_CLEAR(self->ts.exc_state.exc_traceback);
+    Py_CLEAR(self->ts.exc_state.previous_item);
+#else
     Py_CLEAR(self->ts.exc_type);
     Py_CLEAR(self->ts.exc_value);
     Py_CLEAR(self->ts.exc_traceback);
+#endif
     return 0;
 }
 
diff --git a/src/fibers.h b/src/fibers.h
index 0165fd7..0f38347 100644
--- a/src/fibers.h
+++ b/src/fibers.h
@@ -35,9 +35,13 @@ typedef struct _fiber {
     struct {
 	struct _frame *frame;
 	int recursion_depth;
+#if PY_VERSION_HEX >= 0x03070000
+		_PyErr_StackItem exc_state;
+#else
         PyObject *exc_type;
         PyObject *exc_value;
         PyObject *exc_traceback;
+#endif
     } ts;
 } Fiber;
 
